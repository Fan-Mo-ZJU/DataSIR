prompts:
  - name: "prompt1"
    description: "无敏感标签+无格式变换"
    system_msg: |
      你是一个擅长从复杂文本语句中提取敏感信息的资深网络安全工程师。
    user_msg: |
      # 任务
      下面我将输入一段字符串，请你判断是什么敏感信息类型，请按照我的要求输出你结论。
      # 输出格式
      如下json:
      {
       "Datatype": string //敏感信息类型 
      }
      # 开始任务
      输入: $input
      输出:


  - name: "prompt2"
    description: "有敏感标签+无格式变换"
    system_msg: |
      你是一个擅长从复杂文本语句中提取敏感信息的资深网络安全工程师。
    user_msg: |
      # 背景
      - 敏感数据类型集合
       手机号, 固定电话, 姓名, 机构, IMEI, IPv6, IPv4, JDBC连接串, MAC, MEID, IMSI, URL链接, 日期和时间, 党派, 地址, 职业, 国籍, 护照号, 婚姻状况, 驾驶证, 金额, 个人身份标识, 现病史, 邮编, 邮箱, 宗教信仰。
          注意：个人身份标识为标识个人身份信息的敏感数据，在各国的定义不同，在中国为中国居民身份证，在台湾为中国台湾身份证号，在美国为社会安全号码（SSN），在德国为税号，在西班牙为身份证号，在英国为国家保险号，以此类推。
      # 任务
       下面我将输入一段字符串，请你分析并判断该字符串是**敏感数据类型集合**中的哪一种。请按照我的要求输出你的分析过程、敏感信息的类型。
      ## 注意
      1. 仅通过你自己的能力进行分析，不要编写任何代码
      # 输出格式
      如下json:
      {
       "analysis": string //对字符串敏感数据类型的判定过程
       "Datatype": string //敏感信息类型, 为**敏感数据类型集合**中的一种
      }
      
      # 输入输出样例
      输入: 衡水👍市高新区和平西路2230号泊乐港湾A座😊13号商铺
      输出:
       {
       "analysis":"提供的字符串中包含了地名“衡水市高新区和平西路2230号泊乐港湾A座13号商铺”，这些信息明确指向了一个具体的地址。根据敏感数据类型集合，地址被定义为一种敏感数据类型。",
       "Datatype": "地址",
       }
      
      # 开始任务
      输入: $input
      输出:



  - name: "prompt3"
    description: "有敏感标签+有格式变换"
    system_msg: |
      你是一个擅长从复杂文本语句中提取敏感信息的资深网络安全工程师。
    user_msg: |
      # 背景
      
      - 敏感数据类型集合
      
       手机号, 固定电话, 姓名, 机构, IMEI, IPv6, IPv4, JDBC连接串, MAC, MEID, IMSI, URL链接, 日期和时间, 党派, 地址, 职业, 国籍, 护照号, 婚姻状况, 驾驶证, 金额, 个人身份标识, 现病史, 邮编, 邮箱, 宗教信仰。
          注意：个人身份标识为标识个人身份信息的敏感数据，在各国的定义不同，在中国为中国居民身份证，在台湾为中国台湾身份证号，在美国为社会安全号码（SSN），在德国为税号，在西班牙为身份证号，在英国为国家保险号，以此类推。
      - 格式变换方式集合
      
       二进制, 八进制, 十六进制, ASCII编码, Unicode编码, UTF-8编码, Base64编码, URL编码, HTML实体编码, 摩尔斯电码, 点字编码, 嵌套编码, 藏头诗, 拆字, 倒转文字, 火星文, 简转繁, 数字大写, 插入特殊字符, 插入常见汉字, 插入常见英文或数字
      
      # 任务
      
       下面我将输入一段字符串，该字符串可能使用了**格式变换方式集合**中的一种变换方式，也可能未经过任何变换，请注意甄别并通过自己的能力解析出原始的敏感信息。建议先分析，然后判断格式变换方式是***格式变换方式集合*中的哪一种（有可能未经变化，则为"无"），然后根据格式变换去还原解析原始的敏感内容，最后按照解析出的原始敏感内容去判断它是**敏感数据类型集合**中的哪一种。请按照我的要求输出你的分析过程、最有可能的一种变换类型、解析后的敏感信息、敏感信息的类型。**格式变换方式集合**中的变换示例为：
      
       - 二进制转换，注意是将原始的十进制的每一个数字转换成四位二进制，不同数字间使用空格链接，例如原文为“616655990822147”转换为“0110 0001 0110 0110 0101 0101 1001 1001 0000 1000 0010 0010 0001 0100 0111”
      
       - 八进制转换，注意是将原始的十进制的每一个数字单独转化成八进制，不用数字间使用空格链接，例如原文为“616655990822147”转换为“6 1 6 6 5 5 11 11 0 10 2 2 1 4 7”
      
       - 十六进制转换，注意是正常将十进制按照整个数值进行十六进制转换，例如原文为“616655990822147”转换为“230d869481503”
      
       - ASCII编码，例如原文为“China”转换为“0x43 0x68 0x69 0x6E 0x61”，或者“689837”转换为“0x36 0x38 0x39 0x38 0x33 0x37”
      
       - Unicode编码，例如原文为“中国”转换为“\u4e2d\u56fd”，或者“China”转换为“\u0043\u0068\u0069\u006e\u0061”，或者“689837”转换为“\u0036\u0038\u0039\u0038\u0033\u0037”
      
       - UTF-8编码，例如原文为“中国”转换为“\xE4\xB8\xAD\xE5\x9B\xBD”，或者“china”转换为“\x43\x68\x69\x6E\x61”，或者“689837”转换为“\x36\x38\x39\x38\x33\x37”
      
       - Base64编码，例如原文为“中国”转换为“5Lit5Zu9”，或者“China”转换为“Q2hpbmE=”，或者“689837”转换为“Njg5ODM3”
      
       - URL编码，例如原文为“中国”转换为“%E4%B8%AD%E5%9B%BD”
      
       - Html实体编码：所有字符先经过UTF-8编码再转换，保留字符用“&实体名;”或“&#实体编号;”表示，例如原文为“中国”转换为“&#x4e2d;&#x56fd;”，或者“China”转换为“&#x43;&#x68;&#x69;&#x6e;&#x61;”或者“689837”转换为“&#x36;&#x38;&#x39;&#x38;&#x33;&#x37;”
      
       - 摩尔斯电码，例如原文为“China”转换为“-.-. .... .. -. .-”，或者“689837”转换为“-.... ---.. ----. ---.. ...-- --...”
      
       - 点字编码：一种通过不同排列的凸起点阵表示字符的文字系统，例如原文为“China”转换为“⠠⠉⠠⠓⠠⠊⠠⠝⠠⠁”，或者“689837”转换为“⠼⠋⠼⠓⠼⠊⠼⠓⠼⠉⠼⠛”
      
       - 嵌套编码：对同一数据应用多次编码，所有的单次编码方式均为encode_unicode, encode_utf8, encode_base64, encode_html中的一种编码方式，例如原文为“中国”先经过UTF-8编码转换为“\xE4\xB8\xAD\xE5\x9B\xBD”，再经过Base64编码转换为“XHhFNFx4QjhceEFEXHhFNVx4OUJceEJE”
      ，注意嵌套编码均为进行两次编码，两次编码的方式可能不同也有可能相同
       - 藏头诗：隐藏信息在文本的每句首字或首字母，例如原文为“中国”转换为“中兴大业展宏章，国泰民安盛世长”，或者“China”转换为“Crimson dragons dance through dynasties' dust, History hums in the Great Wall's crust, Ink-stained silk roads stitch heaven to earth, Nine bends of the Yellow River birth, A phoenix aflame—the East’s rebirth.”
      
       - 拆字：将汉字拆解为部件或笔画，例如原文为“未婚”转换为“未女昏”
      
       - 倒转文字：反转字符顺序，例如原文为“中国”转换为“国中”，或者“China”转换为“anihC”，或者“689837”转换为“738986”
      
       - 火星文：用形近字符替代原字，例如原文为“中国”->“狆國”，或者“China”转换为“Ch1n@”，或者“689837”转换为“➅➇➈➇➂➆”
      
       - 简体转繁体：简体汉字一对一映射为繁体，例如原文为“中国”转换为“中國”
      
       - 数字大写：数字转防篡改中文字符，例如原文为“Fr45814”转换为“Fr肆伍捌壹肆”
      
       - 插入特殊字符：在原文中插入无关符号（如零宽字符、表情符号😊、特殊符号#），例如原文为“中国”转换为“中😊国”，或者“China”转换为“China😊”，或者“689837”转换为“689😊837”
      
       - 插入常见汉字：在文本中随机插入汉字，例如原文为“China”转换为“China买它”
      
       - 插入常见英文或数字：在文本中插入字母或数字，例如原文为“中国”转换为“中OMG国”
      
      ## 注意
      
      1. 仅通过你自己的能力进行原始敏感数据的解析，不要编写任何代码
      
      2. 给定的字符串有可能为经过某些变换之后的，有可能是未经任何变换的。
      
       2.1 若为某些变换之后的，请解析至有明确含义的人类可读的文本，对于数字，人类可读的文本是包含明显涵义的十进制数字，对于英文或者汉字，人类可读的文本是符合现实自然语言标准的；
      
       2.2 若本身未经过变换，则将给定字符串视为解析后的结果即可。
      
      3. 注意，你尝试解码后的结果如果仍不符合人类可读，有可能为嵌套编码，请尝试继续解码。
      
      
      # 输出格式
      
      如下json:
      
      {
      
       "analysis": string //对字符串敏感数据类型的判定过程
       "transform_type": string //可能的变换类型，输出最有可能的一种变换类型，为**格式变换方式集合**中的一种，或者"无"（若没有经过变换）
        "original_Data": string //解析后的人类可读的敏感信息
       "datatype": string //敏感信息类型, 为**敏感数据类型集合**中的一种；如果实际数据内容为身份证或者SSN或其它**敏感数据类型集合**中==个人身份标识==定义的其它国家的身份标识，请注意一定输出"个人身份标识"。
      }
      
      # 输入输出样例
      
      输入: XHhFNVx4QkNceEEwXHhFNFx4QjhceDg5
      
      输出:
      
       {
      
       "analysis":"输入字符串为'XHhFNVx4QkNceEEwXHhFNFx4QjhceDg5'，观察到每个部分以'XHh'开头，推测可能为嵌套编码。首先尝试将整个字符串进行Base64解码，得到字节序列'\\xE5\\xBC\\xA0\\xE4\\xB8\\x89'，对应UTF-8编码的汉字'张三'。因此判断该字符串经过两次编码：首先将'张三'转换为UTF-8转义序列，再进行Base64编码。",
       "transform_type": "嵌套编码",
       "original_Data": "张三",
       "datatype": "姓名"
       }
      
      # 开始任务
      输入: $input
      输出: